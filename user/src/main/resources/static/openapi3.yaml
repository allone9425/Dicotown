openapi: 3.0.1
info:
  title: User API
  description: API document
  version: 0.1.0
servers:
- url: http://localhost:30002
tags: []
paths:
  /api/v1/login:
    post:
      tags:
      - api
      summary: 로그인 API
      description: 로그인 API
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-login1625419177'
            examples:
              login200:
                value: "{\r\n  \"email\" : \"test@email.com\",\r\n  \"password\" :\
                  \ \"TestPW1234!\"\r\n}"
              login400:
                value: "{\r\n  \"email\" : \"test@gmail.com\",\r\n  \"password\" :\
                  \ \"TestPW1234!\"\r\n}"
              login500:
                value: "{\r\n  \"email\" : \"test@naver.com\",\r\n  \"password\" :\
                  \ \"TestPW1234!\"\r\n}"
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-login-74655746'
              examples:
                login200:
                  value: "{\r\n  \"data\" : {\r\n    \"accessToken\" : \"accessToken\"\
                    ,\r\n    \"refreshToken\" : \"refreshToken\"\r\n  }\r\n}"
        "400":
          description: "400"
        "500":
          description: "500"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-logout486549215'
              examples:
                login500:
                  value: "{\r\n  \"message\" : \"서버 오류\"\r\n}"
  /api/v1/logout:
    post:
      tags:
      - api
      summary: 로그아웃 API
      description: 로그아웃 API
      operationId: logout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-logout1066400619'
            examples:
              logout200:
                value: "{\r\n  \"accessToken\" : \"accessToken\",\r\n  \"refreshToken\"\
                  \ : \"refreshToken\"\r\n}"
              logout400:
                value: "{\r\n  \"accessToken\" : \"accessToken\",\r\n  \"refreshToken\"\
                  \ : \"refreshToken\"\r\n}"
              logout500:
                value: "{\r\n  \"accessToken\" : \"accessToken\",\r\n  \"refreshToken\"\
                  \ : \"refreshToken\"\r\n}"
      responses:
        "200":
          description: "200"
        "400":
          description: "400"
        "500":
          description: "500"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-logout486549215'
              examples:
                logout500:
                  value: "{\r\n  \"message\" : \"서버 오류\"\r\n}"
  /api/v1/user:
    post:
      tags:
      - api
      summary: 회원가입 API
      description: 회원가입 API
      operationId: createUser
      parameters:
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-user879154472'
            examples:
              createUser200:
                value: "{\r\n  \"email\" : \"test@email.com\",\r\n  \"password\" :\
                  \ \"tesT@1234\",\r\n  \"username\" : \"testuser\"\r\n}"
              createUser400:
                value: "{\r\n  \"email\" : null,\r\n  \"password\" : \"tesT@1234\"\
                  ,\r\n  \"username\" : \"testuser\"\r\n}"
              createUser500:
                value: "{\r\n  \"email\" : \"test@email.com\",\r\n  \"password\" :\
                  \ \"tesT@1234\",\r\n  \"username\" : \"testuser\"\r\n}"
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-logout486549215'
              examples:
                createUser200:
                  value: "{\r\n  \"data\" : {\r\n    \"id\" : null,\r\n    \"email\"\
                    \ : null\r\n  }\r\n}"
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-userId475340455'
              examples:
                createUser400:
                  value: "{\r\n  \"message\" : \"이메일이 누락되었습니다.\"\r\n}"
        "500":
          description: "500"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-userId475340455'
              examples:
                createUser500:
                  value: "{\r\n  \"message\" : \"서버 오류\"\r\n}"
  /api/v1/user/{userId}:
    get:
      tags:
      - api
      summary: 프로필 조회 API
      description: 프로필 조회 API
      operationId: getUserProfile
      parameters:
      - name: userId
        in: path
        description: 사용자 아이디
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
        example: Bearer test
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-userId-73471858'
              examples:
                getUserProfile200:
                  value: "{\r\n  \"data\" : {\r\n    \"userId\" : 1,\r\n    \"email\"\
                    \ : \"test@email.com\",\r\n    \"username\" : \"testuser\"\r\n\
                    \  }\r\n}"
        "403":
          description: "403"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-userId475340455'
              examples:
                getUserProfile403:
                  value: "{\r\n  \"message\" : \"Not allowed\"\r\n}"
        "500":
          description: "500"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-userId475340455'
              examples:
                getUserProfile500:
                  value: "{\r\n  \"message\" : \"서버 오류\"\r\n}"
    delete:
      tags:
      - api
      summary: 탈퇴 API
      description: 탈퇴 API
      operationId: exitUser
      parameters:
      - name: userId
        in: path
        description: 사용자 아이디
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: jwt 토큰 정보
        required: true
        schema:
          type: string
        example: Bearer token
      responses:
        "200":
          description: "200"
        "403":
          description: "403"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-logout486549215'
              examples:
                exitUser403:
                  value: "{\r\n  \"message\" : \"Not allowed\"\r\n}"
        "500":
          description: "500"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-userId475340455'
              examples:
                exitUser500:
                  value: "{\r\n  \"message\" : \"서버 오류\"\r\n}"
    patch:
      tags:
      - api
      summary: 회원정보 수정 API
      description: 회원정보 수정 API
      operationId: updateUser
      parameters:
      - name: userId
        in: path
        description: ""
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-user-userId-283233779'
            examples:
              updateUser200:
                value: "{\r\n  \"email\" : \"test@test.com\"\r\n}"
              updateUser403:
                value: "{\r\n  \"email\" : \"test@test.com\"\r\n}"
              updateUser500:
                value: "{\r\n  \"email\" : \"test@test.com\"\r\n}"
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-userId-92182952'
              examples:
                updateUser200:
                  value: "{\r\n  \"data\" : {\r\n    \"email\" : \"test@test.com\"\
                    \r\n  }\r\n}"
        "403":
          description: "403"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-userId475340455'
              examples:
                updateUser403:
                  value: "{\r\n  \"message\" : \"Not allowed\"\r\n}"
        "500":
          description: "500"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-userId475340455'
              examples:
                updateUser500:
                  value: "{\r\n  \"message\" : \"서버 오류\"\r\n}"
components:
  schemas:
    api-v1-user-userId-73471858:
      type: object
      properties:
        data:
          required:
          - email
          - userId
          - username
          type: object
          properties:
            userId:
              type: string
              description: 사용자 아이디
            email:
              type: string
              description: 이메일
            username:
              type: string
              description: 닉네임
    api-v1-user-userId475340455:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: 에러 메시지
    api-v1-login-74655746:
      type: object
      properties:
        data:
          required:
          - accessToken
          - refreshToken
          type: object
          properties:
            accessToken:
              type: string
              description: accessToken
            refreshToken:
              type: string
              description: refreshToken
    api-v1-user-userId-283233779:
      required:
      - email
      type: object
      properties:
        email:
          type: string
          description: 이메일
    api-v1-logout1066400619:
      required:
      - accessToken
      - refreshToken
      type: object
      properties:
        accessToken:
          type: string
          description: accessToken
        refreshToken:
          type: string
          description: refreshToken
    api-v1-login1625419177:
      required:
      - email
      - password
      type: object
      properties:
        password:
          type: string
          description: password
        email:
          type: string
          description: email
    api-v1-user-userId-92182952:
      type: object
      properties:
        data:
          required:
          - email
          type: object
          properties:
            email:
              type: string
              description: 이메일
    api-v1-user879154472:
      required:
      - email
      - password
      - username
      type: object
      properties:
        password:
          type: string
          description: 비밀번호
        email:
          type: string
          description: 이메일
        username:
          type: string
          description: 사용자 이름
    api-v1-logout486549215:
      type: object
