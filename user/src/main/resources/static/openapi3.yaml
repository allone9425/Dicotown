openapi: 3.0.1
info:
  title: User API
  description: API document
  version: 0.1.0
servers:
- url: http://localhost:30002
tags: []
paths:
  /api/v1/login:
    post:
      tags:
      - api
      summary: 로그인 API
      description: 로그인 API
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-login1625419177'
            examples:
              login500:
                value: |-
                  {
                    "email" : "test@naver.com",
                    "password" : "TestPW1234!"
                  }
              login200:
                value: |-
                  {
                    "email" : "test@email.com",
                    "password" : "TestPW1234!"
                  }
              login400:
                value: |-
                  {
                    "email" : "test@gmail.com",
                    "password" : "TestPW1234!"
                  }
      responses:
        "500":
          description: "500"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-logout486549215'
              examples:
                login500:
                  value: |-
                    {
                      "message" : "서버 오류"
                    }
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-login-74655746'
              examples:
                login200:
                  value: |-
                    {
                      "data" : {
                        "accessToken" : "accessToken",
                        "refreshToken" : "refreshToken"
                      }
                    }
        "400":
          description: "400"
  /api/v1/logout:
    post:
      tags:
      - api
      summary: 로그아웃 API
      description: 로그아웃 API
      operationId: logout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-logout1066400619'
            examples:
              logout400:
                value: |-
                  {
                    "accessToken" : "accessToken",
                    "refreshToken" : "refreshToken"
                  }
              logout200:
                value: |-
                  {
                    "accessToken" : "accessToken",
                    "refreshToken" : "refreshToken"
                  }
              logout500:
                value: |-
                  {
                    "accessToken" : "accessToken",
                    "refreshToken" : "refreshToken"
                  }
      responses:
        "400":
          description: "400"
        "200":
          description: "200"
        "500":
          description: "500"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-logout486549215'
              examples:
                logout500:
                  value: |-
                    {
                      "message" : "서버 오류"
                    }
  /api/v1/user:
    post:
      tags:
      - api
      summary: 회원가입 API
      description: 회원가입 API
      operationId: createUser
      parameters:
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-user879154472'
            examples:
              createUser400:
                value: |-
                  {
                    "email" : null,
                    "password" : "tesT@1234",
                    "username" : "testuser"
                  }
              createUser500:
                value: |-
                  {
                    "email" : "test@email.com",
                    "password" : "tesT@1234",
                    "username" : "testuser"
                  }
              createUser200:
                value: |-
                  {
                    "email" : "test@email.com",
                    "password" : "tesT@1234",
                    "username" : "testuser"
                  }
      responses:
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-userId475340455'
              examples:
                createUser400:
                  value: |-
                    {
                      "message" : "이메일이 누락되었습니다."
                    }
        "500":
          description: "500"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-userId475340455'
              examples:
                createUser500:
                  value: |-
                    {
                      "message" : "서버 오류"
                    }
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-logout486549215'
              examples:
                createUser200:
                  value: |-
                    {
                      "data" : {
                        "id" : null,
                        "email" : null
                      }
                    }
  /api/v1/user/{userId}:
    get:
      tags:
      - api
      summary: 프로필 조회 API
      description: 프로필 조회 API
      operationId: getUserProfile
      parameters:
      - name: userId
        in: path
        description: 사용자 아이디
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
        example: Bearer test
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-userId-73471858'
              examples:
                getUserProfile200:
                  value: |-
                    {
                      "data" : {
                        "userId" : 1,
                        "email" : "test@email.com",
                        "username" : "testuser"
                      }
                    }
        "403":
          description: "403"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-userId475340455'
              examples:
                getUserProfile403:
                  value: |-
                    {
                      "message" : "Not allowed"
                    }
        "500":
          description: "500"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-userId475340455'
              examples:
                getUserProfile500:
                  value: |-
                    {
                      "message" : "서버 오류"
                    }
    delete:
      tags:
      - api
      summary: 탈퇴 API
      description: 탈퇴 API
      operationId: exitUser
      parameters:
      - name: userId
        in: path
        description: 사용자 아이디
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: jwt 토큰 정보
        required: true
        schema:
          type: string
        example: Bearer token
      responses:
        "200":
          description: "200"
        "403":
          description: "403"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-logout486549215'
              examples:
                exitUser403:
                  value: |-
                    {
                      "message" : "Not allowed"
                    }
        "500":
          description: "500"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-userId475340455'
              examples:
                exitUser500:
                  value: |-
                    {
                      "message" : "서버 오류"
                    }
    patch:
      tags:
      - api
      summary: 회원정보 수정 API
      description: 회원정보 수정 API
      operationId: updateUser
      parameters:
      - name: userId
        in: path
        description: ""
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: application/json
        required: true
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api-v1-user-userId-283233779'
            examples:
              updateUser500:
                value: |-
                  {
                    "email" : "test@test.com"
                  }
              updateUser200:
                value: |-
                  {
                    "email" : "test@test.com"
                  }
              updateUser403:
                value: |-
                  {
                    "email" : "test@test.com"
                  }
      responses:
        "500":
          description: "500"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-userId475340455'
              examples:
                updateUser500:
                  value: |-
                    {
                      "message" : "서버 오류"
                    }
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-userId-92182952'
              examples:
                updateUser200:
                  value: |-
                    {
                      "data" : {
                        "email" : "test@test.com"
                      }
                    }
        "403":
          description: "403"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-v1-user-userId475340455'
              examples:
                updateUser403:
                  value: |-
                    {
                      "message" : "Not allowed"
                    }
components:
  schemas:
    api-v1-user-userId-73471858:
      type: object
      properties:
        data:
          required:
          - email
          - userId
          - username
          type: object
          properties:
            userId:
              type: string
              description: 사용자 아이디
            email:
              type: string
              description: 이메일
            username:
              type: string
              description: 닉네임
    api-v1-user-userId475340455:
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: 에러 메시지
    api-v1-login-74655746:
      type: object
      properties:
        data:
          required:
          - accessToken
          - refreshToken
          type: object
          properties:
            accessToken:
              type: string
              description: accessToken
            refreshToken:
              type: string
              description: refreshToken
    api-v1-user-userId-283233779:
      required:
      - email
      type: object
      properties:
        email:
          type: string
          description: 이메일
    api-v1-logout1066400619:
      required:
      - accessToken
      - refreshToken
      type: object
      properties:
        accessToken:
          type: string
          description: accessToken
        refreshToken:
          type: string
          description: refreshToken
    api-v1-login1625419177:
      required:
      - email
      - password
      type: object
      properties:
        password:
          type: string
          description: password
        email:
          type: string
          description: email
    api-v1-user-userId-92182952:
      type: object
      properties:
        data:
          required:
          - email
          type: object
          properties:
            email:
              type: string
              description: 이메일
    api-v1-user879154472:
      required:
      - email
      - password
      - username
      type: object
      properties:
        password:
          type: string
          description: 비밀번호
        email:
          type: string
          description: 이메일
        username:
          type: string
          description: 사용자 이름
    api-v1-logout486549215:
      type: object
